


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             ARMex, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 E3A0000A        MOV              r0, #10     ;data
    5 00000004 E3A0100B        MOV              r1, #11
    6 00000008 E3A0200C        MOV              r2, #12
    7 0000000C E3A0300D        MOV              r3, #13
    8 00000010 E3A0400E        MOV              r4, #14
    9 00000014 E3A0500F        MOV              r5, #15
   10 00000018 E3A06010        MOV              r6, #16
   11 0000001C E3A07011        MOV              r7, #17
   12 00000020         
   13 00000020 E3A080A0        MOV              r8, #160
   14 00000024         
   15 00000024 E59F909C        LDR              r9, Address1 ;Address to store
   16 00000028         
   17 00000028 E92D0010        STMFD            sp!, {r4}   ;Store r4 before do
                                                            Register()
   18 0000002C         
   19 0000002C E1A0E00F        MOV              lr, pc      ;Do after doRegiste
                                                            r() is done
   20 00000030 EA000005        B                doRegister
   21 00000034         
   22 00000034 E1A0E00F        MOV              lr, pc      ;Do after doGCD() i
                                                            s done
   23 00000038 EA00001A        B                doGCD
   24 0000003C         
   25 0000003C E8BD0010        LDMFD            sp!, {r4}   ;Read r4 before doR
                                                            egister()
   26 00000040 E0888004        ADD              r8, r4      ;add GCD and r4
   27 00000044 E5898000        STR              r8, [r9]    ;store it
   28 00000048         
   29 00000048 E3A0F000        MOV              pc, #0
   30 0000004C         
   31 0000004C         
   32 0000004C         doRegister                           ;Suffle register
   33 0000004C         
   34 0000004C E92D40FF        STMFD            sp!, {r0-r7, lr} 
                                                            ;store at stack
   35 00000050         
   36 00000050 E8BD0002        LDMFD            sp!, {r1}   ;load from stack
   37 00000054 E8BD0040        LDMFD            sp!, {r6}
   38 00000058 E8BD0001        LDMFD            sp!, {r0}
   39 0000005C E8BD0004        LDMFD            sp!, {r2}
   40 00000060 E8BD0080        LDMFD            sp!, {r7}
   41 00000064 E8BD0038        LDMFD            sp!, {r3-r5}
   42 00000068         
   43 00000068 E2811001        ADD              r1, #1      ;add index
   44 0000006C E2822002        ADD              r2, #2
   45 00000070 E2833003        ADD              r3, #3
   46 00000074 E2844004        ADD              r4, #4
   47 00000078 E2855005        ADD              r5, #5
   48 0000007C E2866006        ADD              r6, #6
   49 00000080 E2877007        ADD              r7, #7
   50 00000084         
   51 00000084 E1A0A000        MOV              r10, r0     ;add all of num at 
                                                            r10
   52 00000088 E08AA001        ADD              r10, r1
   53 0000008C E08AA002        ADD              r10, r2



ARM Macro Assembler    Page 2 


   54 00000090 E08AA003        ADD              r10, r3
   55 00000094 E08AA004        ADD              r10, r4
   56 00000098 E08AA005        ADD              r10, r5
   57 0000009C E08AA006        ADD              r10, r6
   58 000000A0 E08AA007        ADD              r10, r7
   59 000000A4         
   60 000000A4 E8BD8000        LDMFD            sp!, {pc}   ;fuction end
   61 000000A8         
   62 000000A8         doGCD                                ;get GCD
   63 000000A8 E158000A        CMP              r8, r10     ; A%B = R
   64 000000AC 8048800A        SUBHI            r8, r8, r10
   65 000000B0 8AFFFFFC        BHI              doGCD
   66 000000B4         
   67 000000B4 01A0F00E        MOVEQ            pc, lr      ;if R == 0, r8 is G
                                                            CD
   68 000000B8         
   69 000000B8 E1A0B008        MOV              r11, r8     ;swqp r8, r10    
   70 000000BC E1A0800A        MOV              r8, r10
   71 000000C0 E1A0A00B        MOV              r10, r11
   72 000000C4         
   73 000000C4 EAFFFFF7        B                doGCD       ;GCD again
   74 000000C8         
   75 000000C8         
   76 000000C8 00004200 
                       Address1
                               &                &0004200
   77 000000CC         
   78 000000CC                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM9E --apcs=interwork 
--depend=.\objects\assignment_4_3.d -o.\objects\assignment_4_3.o -IC:\Keil_v5\A
RM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predef
ine="__UVISION_VERSION SETA 521" --list=.\listings\assignment_4_3.lst assignmen
t_4_3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARMex 00000000

Symbol: ARMex
   Definitions
      At line 1 in file assignment_4_3.s
   Uses
      None
Comment: ARMex unused
Address1 000000C8

Symbol: Address1
   Definitions
      At line 76 in file assignment_4_3.s
   Uses
      At line 15 in file assignment_4_3.s
Comment: Address1 used once
doGCD 000000A8

Symbol: doGCD
   Definitions
      At line 62 in file assignment_4_3.s
   Uses
      At line 23 in file assignment_4_3.s
      At line 65 in file assignment_4_3.s
      At line 73 in file assignment_4_3.s

doRegister 0000004C

Symbol: doRegister
   Definitions
      At line 32 in file assignment_4_3.s
   Uses
      At line 20 in file assignment_4_3.s
Comment: doRegister used once
4 symbols
336 symbols in table
